name: Generate Music with MusicGen-Large (10s)

on:
  workflow_dispatch:
    inputs:
      prompt:
        description: 'Describe the music you want (e.g., "ambient synth with soft rain")'
        required: true
        default: 'chill lofi with rain'

jobs:
  generate:
    runs-on: ubuntu-latest
    timeout-minutes: 15

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y ffmpeg libsndfile1
          pip install torch==2.1.0
          pip install torchaudio
          pip install audiocraft
          pip install soundfile
          pip install "numpy<2.0" --force-reinstall

      - name: Generate 10s music using musicgen-large
        env:
          INPUT_PROMPT: ${{ github.event.inputs.prompt }}
          HF_TOKEN: ${{ secrets.HF_TOKEN }}
        run: |
          mkdir -p output
          python <<EOF
          import os
          import torch
          import torchaudio
          from audiocraft.models import MusicGen
          from huggingface_hub import login
          import subprocess

          prompt = os.getenv("INPUT_PROMPT", "chill lofi with rain")
          hf_token = os.getenv("HF_TOKEN", "")

          print(f"🎵 Generating 10s music for prompt: {prompt}")
          login(token=hf_token)

          model = MusicGen.get_pretrained("facebook/musicgen-large")
          model.set_generation_params(duration=10)

          waveform = model.generate([prompt])[0]
          os.makedirs("output", exist_ok=True)

          wav_path = "output/music.wav"
          mp3_path = "output/music.mp3"
          torchaudio.save(wav_path, waveform, sample_rate=model.sample_rate)

          try:
              subprocess.run(
                  ["ffmpeg", "-y", "-i", wav_path, "-codec:a", "libmp3lame", "-b:a", "192k", mp3_path],
                  check=True
              )
              print(f"✅ MP3 saved: {mp3_path}")
          except subprocess.CalledProcessError as e:
              print("❌ MP3 conversion failed:", e)
          EOF

      - name: Upload generated music
        uses: actions/upload-artifact@v4
        with:
          name: musicgen-output-${{ github.run_id }}
          path: |
            output/music.wav
            output/music.mp3
