name: Generate Music with Suno

on:
  workflow_dispatch: # allows manual run from GitHub
  schedule:
    - cron: '0 3 * * *'  # optional: runs daily at 3 AM UTC

jobs:
  generate-music:
    runs-on: ubuntu-latest

    env:
      SUNO_EMAIL: ${{ secrets.SUNO_EMAIL }}
      SUNO_PASSWORD: ${{ secrets.SUNO_PASSWORD }}
      MUSIC_PROMPT: "A calming lofi beat with soft rain and vinyl crackle."

    steps:
      - name: Checkout repo
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install suno-api

      - name: Generate music
        run: |
          mkdir -p output
          python <<EOF
          from suno import SunoAPI
          import os

          email = os.environ['SUNO_EMAIL']
          password = os.environ['SUNO_PASSWORD']
          prompt = os.environ['MUSIC_PROMPT']

          suno = SunoAPI()
          suno.login(email, password)

          print(f"Generating music for prompt: {prompt}")
          track_ids = suno.generate(prompt=prompt, make_instrumental=False)

          print("Waiting for generation to complete...")
          suno.wait_for_generation(track_ids)

          print("Downloading generated music...")
          for i, track_id in enumerate(track_ids):
              filename = f"output/generated_{i+1}.mp3"
              suno.download(track_id, filename)
              print(f"Saved: {filename}")
          EOF

      - name: Upload output as artifact
        uses: actions/upload-artifact@v4
        with:
          name: generated-music
          path: output/
