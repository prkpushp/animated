name:  (Test with Token)

on:
  workflow_dispatch:

jobs:
  generate-video:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y jq

      - name: Generate Veo3 video
        run: |
          set -e

          PROJECT_ID="qwiklabs-gcp-00-052a5127bc5c"
          LOCATION_ID="us-central1"
          API_ENDPOINT="us-central1-aiplatform.googleapis.com"
          MODEL_ID="veo-3.0-fast-generate-001"
          STORAGE_URI="gs://qwiklabs-gcp-00-052a5127bc5c-labconfig-bucket/output/"
          LOCAL_DIR="./videos"
          mkdir -p "$LOCAL_DIR"

          # ⚠️ HARD-CODED TEST TOKEN (Do not use in production)
          AUTH_TOKEN="ya29.A0AS3H6NyO2F4j8eFhp_Yw4FkDj4ikr4k6WZPqEdiToVldy6NmZK4JtEmYBPMPPsz6_RMP1os10bU_S7CgxoHgvkbLHqrKtilLABujMNlGMjp-6qdpfi2IHmLC7qpfcZRkkqyJMoSYiyTbnHoj4kkhCflfvC5T7t_Xf_c4_ObnGVcEJpeelHiY-4JS-zTX8p-aYcdTFrm7oPnp_ha7ZGp0GEuIaexAnBi499-8UFb4qpfcTMzMN5LNvHzQ5T-8nauGjWhY7Tpt8ogJyr5BPlULTsOglWEkKC0i0NOj-uZqsSiVt8Jz6BNZoSjjZPTL2DcUVtZSrFepMyfAEtA3LmV2bQwevLBjcOq_A_HapAaCgYKAcISARMSFQHGX2Mi7quUxjSwVEknGHLTjZawSA0365"

          PROMPT="Tied between two thick trees in a forest glade, a hammock sways with two figures entangled in rain-soaked warmth..."

          cat << EOF > request.json
          {
            "instances": [
              {
                "prompt": "${PROMPT}"
              }
            ],
            "parameters": {
              "aspectRatio": "16:9",
              "sampleCount": 1,
              "durationSeconds": "8",
              "personGeneration": "allow_adult",
              "enablePromptRewriting": true,
              "addWatermark": true,
              "includeRaiReason": true,
              "storageUri": "${STORAGE_URI}"
            }
          }
          EOF

          echo "Requesting video generation..."
          RESPONSE_INIT=$(curl -s \
            -X POST \
            -H "Content-Type: application/json" \
            -H "Authorization: Bearer ${AUTH_TOKEN}" \
            "https://${API_ENDPOINT}/v1/projects/${PROJECT_ID}/locations/${LOCATION_ID}/publishers/google/models/${MODEL_ID}:predictLongRunning" \
            -d @request.json)

          echo "$RESPONSE_INIT" > response_init.json

          OPERATION_ID=$(echo "$RESPONSE_INIT" | jq -r '.name // empty')

          if [[ -z "$OPERATION_ID" ]]; then
            echo "❌ Failed to start operation. Full response:"
            cat response_init.json
            exit 1
          fi

          echo "Polling for video generation to complete..."
          for i in {1..30}; do
            RESPONSE=$(curl -s \
              -X POST \
              -H "Content-Type: application/json" \
              -H "Authorization: Bearer ${AUTH_TOKEN}" \
              "https://${API_ENDPOINT}/v1/projects/${PROJECT_ID}/locations/${LOCATION_ID}/publishers/google/models/${MODEL_ID}:fetchPredictOperation" \
              -d "{\"operationName\":\"${OPERATION_ID}\"}")
            echo "$RESPONSE" > response.json

            if echo "$RESPONSE" | jq -e '.done == true' > /dev/null; then
              echo "✅ Video generation completed!"
              break
            fi
            echo "Waiting... ($i/30)"
            sleep 10
          done

          VIDEO_URI=$(jq -r '.response.videos[0].gcsUri // empty' response.json)

          if [[ -z "$VIDEO_URI" ]]; then
            echo "❌ No video URI found!"
            cat response.json
            exit 1
          fi

          echo "Downloading from: $VIDEO_URI"
          EPOCH=$(date +%s)
          FILENAME="video_${EPOCH}.mp4"
          gsutil cp "$VIDEO_URI" "$LOCAL_DIR/$FILENAME"

      - name: Upload downloaded video
        uses: actions/upload-artifact@v4
        with:
          name: generated-video
          path: ./videos/video_*.mp4

      - name: Upload debug logs
        uses: actions/upload-artifact@v4
        with:
          name: debug-json
          path: |
            response.json
            response_init.json
