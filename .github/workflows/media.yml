name: Generate Music + Image with Vertex AI

on:
  workflow_dispatch:
    inputs:
      prompt:
        description: 'Creative prompt (e.g., "An energetic, dreamy piano melody with a lo-fi beat and cityscape at dusk")'
        required: true
        type: string

jobs:
  generate-media:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      actions: write
      id-token: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Authenticate with Google Cloud
        uses: google-github-actions/auth@v2
        with:
          credentials_json: ${{ secrets.GOOGLE_CLOUD_CREDENTIALS }}
          create_credentials_file: true

      - name: Set up Google Cloud CLI
        uses: google-github-actions/setup-gcloud@v2
        with:
          project_id: gothic-envelope-458808-h6
          install_components: "beta"

      - name: Install tools
        run: |
          sudo apt-get update
          sudo apt-get install -y jq curl ffmpeg

      - name: Generate image and music with Vertex AI
        run: |
          mkdir -p output
          PROMPT="${{ inputs.prompt }}"
          TIMESTAMP=$(date +'%Y%m%d%H%M%S')

          ACCESS_TOKEN=$(gcloud auth print-access-token)

          echo "⏳ Generating image..."
          jq -n --arg prompt "$PROMPT" '{
            instances: [{ prompt: $prompt }],
            parameters: {
              sampleCount: 1,
              aspectRatio: "16:9"
            }
          }' > request_image.json

          curl -s -X POST \
            -H "Authorization: Bearer $ACCESS_TOKEN" \
            -H "Content-Type: application/json" \
            "https://us-central1-aiplatform.googleapis.com/v1/projects/gothic-envelope-458808-h6/locations/us-central1/publishers/google/models/imagegeneration:predict" \
            -d @request_image.json \
            -o response_image.json

          IMAGE_B64=$(jq -r '.predictions[0].bytesBase64Encoded' response_image.json)

          if [ "$IMAGE_B64" != "null" ] && [ -n "$IMAGE_B64" ]; then
            echo "$IMAGE_B64" | base64 -d > "output/image-$TIMESTAMP.png"
            echo "✅ Image generated: output/image-$TIMESTAMP.png"
          else
            echo "❌ Failed to generate image."
            cat response_image.json
            exit 1
          fi

          echo "⏳ Generating music..."
          jq -n --arg prompt "$PROMPT" '{
            instances: [{ prompt: $prompt }],
            parameters: {
              sampleCount: 1
            }
          }' > request_music.json

          curl -s -X POST \
            -H "Authorization: Bearer $ACCESS_TOKEN" \
            -H "Content-Type: application/json" \
            "https://us-central1-aiplatform.googleapis.com/v1/projects/gothic-envelope-458808-h6/locations/us-central1/publishers/google/models/lyria-002:predict" \
            -d @request_music.json \
            -o response_music.json

          AUDIO_B64=$(jq -r '.predictions[0].bytesBase64Encoded' response_music.json)

          if [ "$AUDIO_B64" != "null" ] && [ -n "$AUDIO_B64" ]; then
            echo "$AUDIO_B64" | base64 -d > "output/music-$TIMESTAMP.wav"
            echo "✅ Music generated: output/music-$TIMESTAMP.wav"
          else
            echo "❌ Failed to generate music."
            cat response_music.json
            exit 1
          fi

      - name: 🛠️ Run Bash video script
        run: bash scripts/make_video.sh "${{ steps.duration.outputs.duration }}"
        
      - name: Upload media artifact
        uses: actions/upload-artifact@v4
        with:
          name: media-output-${{ github.run_id }}-${{ github.run_number }}
          path: output/
          retention-days: 7
